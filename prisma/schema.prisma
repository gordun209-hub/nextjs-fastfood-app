// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider          = "postgresql"
  url               = env("DB_URI")
  shadowDatabaseUrl = env("SHADOW_DB_URI")
}

model Seller {
  id          Int         @id @default(autoincrement())
  company     String      @unique
  region      String
  currency    String
  menus       Menu[]
  drinks      Drinks[]
  side_dishes Side_Dish[]
  desserts    Desserts[]
  sauces      Sauces[]

}

// whole menu
model Menu {
  id       Int       @id @default(autoincrement())
  name     String
  price    Int
  seller   Seller    @relation(fields: [sellerId], references: [id])
  sellerId Int
  items    Product[]
  size     Size      @default(Medium)
}

// One item like Buger or Fries
model Product {
  id         Int           @id @default(autoincrement())
  price      Int
  name       String
  Menu       Menu?         @relation(fields: [menuId], references: [id])
  menuId     Int?
  ingredient Ingredients[]
}

model Sauces {
  id       Int     @id @default(autoincrement())
  price    Int
  name     String
  Seller   Seller? @relation(fields: [sellerId], references: [id])
  sellerId Int?
}

model Desserts {
  id          Int           @id @default(autoincrement())
  price       Int
  name        String
  Seller      Seller?       @relation(fields: [sellerId], references: [id])
  sellerId    Int?
  ingredients Ingredients[]
}

model Drinks {
  id       Int     @id @default(autoincrement())
  price    Int
  name     String
  Seller   Seller? @relation(fields: [sellerId], references: [id])
  sellerId Int?
}

model Side_Dish {
  id          Int           @id @default(autoincrement())
  price       Int
  name        String
  seller      Seller        @relation(fields: [sellerId], references: [id])
  sellerId    Int
  ingredients Ingredients[]
}

model Ingredients {
  id          Int        @id @default(autoincrement())
  price       Int?
  name        String
  product     Product    @relation(fields: [productId], references: [id])
  productId   Int
  Side_Dish   Side_Dish? @relation(fields: [side_DishId], references: [id])
  side_DishId Int?
  Desserts    Desserts?  @relation(fields: [dessertsId], references: [id])
  dessertsId  Int?
}

enum Size {
  Big
  Medium
  Small
}
